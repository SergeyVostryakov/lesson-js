

//! УСЛОВНЫЙ ОПЕРАТОР "?" IF ELSE

/*
Если выполнение или не выполнение, кода требует каких либо
условий на помощь прийдет инструкция if (если),
и условные операторы else (иначе)
*/

//Синтасис
const message = 'любое текст';

if (2>1){
    console.log(message);
}

/*
Если условие (2>1) возвращает значение true 
то код 
{
    console.log(message);
}
выполнится.

Если условие (2>1) возвращает значение false 
код выполнятся не будет
*/
//---------------------------------------------

//В качестве операндов внутри условия можно использовать 

//переменные 
const value = 'условие true';

const numOne = 5;
const numTwo = 10;


if (numOne<numTwo){
    console.log(value);
}

//различные логические операторы 

const valueString = 'условие true';

if (2 + 1 === 3 && "1" == 1 || 10 > 5 && 10 === 1){
    console.log(valueString);
}

//=================================================================
/*
Преобразование к логическому типу
Инструкция if (…) вычисляет выражение в скобках и 
преобразует результат к логическому типу.
*/
if ('') {
    console.log('верно');
}else {
    console.log('условия не выполнены');
}

if ('1') {
    console.log('верно условия выполнены');
}else {
    console.log('условия не выполнены');
}

if (0) {
    console.log('верно условия выполнены');
}else {
    console.log('условия не выполнены');
}

if (1) {
    console.log('верно условия выполнены');
} else {
    console.log('условия не выполнены');
}

//=================================================================
/*
короткая запись, выполняющая только одно условие ВАЖНО!!!
*/
if (2>1) console.log('верно условия выполнены');

//=================================================================

//Блоки else и else if 
const numerValue = 5;

if ( numerValue > 10) {
    console.log('верно условия выполнены');
} else if ( numerValue > 5) {
    console.log('условия второго блока верны');
} else {
    console.log('Ни одно условие не выполненно');
}

/*
блоков if else может быть сколько угодно
*/
const num4 = 55;

if ( num4 > 50) {
    console.log('значение переменной больще 50');
} else if ( num4 > 30) {
    console.log('значение переменной больще 30');
} else if ( num4 > 10) {
    console.log('значение переменной больще 10');
} else if ( num4 > 5) {
    console.log('значение переменной больще 5');
} else {
    console.log('Ни одно условие не выполненно :( ');
}

//=================================================================

//! Условный оператор '?'
/*
Так называемый «условный» оператор «вопросительный знак» 
позволяет нам сделать это более коротким и простым способом.

Оператор представлен знаком вопроса ?. 
Его также называют «тернарный», так как этот оператор, 
единственный в своём роде, имеет три аргумента.

Синтаксис:

let result = условие ? значение1 : значение2;
*/

// блок if else

let textHello = 'Привет';

if ( 5 > 23) {
    textplus = ', Оля!!!';
}  else {
    textplus = ', Коля!!!';
}
textHello += textplus;

console.log( textHello );

// тот же код только с использованием условного оператора '?'

let text1 = 'Hello';

let textPlus = (5 > 10) ?  ', Tim!!!' : ', Boby!!!';

text1 += textPlus;

console.log(text1);

/*
Допускается написания кода 
let textPlus = 5 > 10 ?  ', Tim!!!' : ', Boby!!!';
так как у оператора ? низкий приоритет и сначала выполнится сравнение 5 > 10
а после код после оператора '?'
*/

//! Несколько операторов '?' и конструкция if else if ... else

let startText = 'Привет';

const numerStart = 5;

if ( numerStart > 30) {
    textEnd = ', Оля!!!';
} else  if ( numerStart > 35) {
    textEnd = ', Коля!!!';
} else  if ( numerStart > 20) {
    textEnd = ', Вася!!!';
} else  if ( numerStart > 10) {
    textEnd = ', Толя!!!';
} else {
    textEnd = ', Саша!!!';
}

startText += textEnd;

console.log(startText);

// тот же код только с использованием условного оператора '?'

let startTextOne = 'Привет';

let numerStart1 = 3;

textEnd1 = ( numerStart1 > 50) ? ', Оля!!!' :
( numerStart1 > 40) ? ', Коля!!!' :
( numerStart1 > 30) ? ', Вася!!!' :
( numerStart1 > 10) ? ', Толя!!!' :
( numerStart1 > 5) ? ', Саша!!!' : ', Инокентий!!!';

startTextOne += textEnd1;

console.log(startTextOne);