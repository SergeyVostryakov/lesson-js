

//! Деструктуризация.

/*
Деструктуризация.
С помощью деструктуризации можно создавать новые переменные
и присвоить им значения. Позволяет разбивать объект или массив 
на переменные и присваивать им значения.
*/

//==============================================================================

//! Деструктуризация обьекта.
/*
Синтаксис.
есть обьект:
const имя_обьекта = {
    свойство1: значение1 
    свойство2: значение2 
    свойство3: значение3 
    свойство4: значение4 
    ...
}

создание одной переменной
const {свойство1} = имя_обьекта

создание нескольких переменных
let {свойство2, свойство3, свойство4, ..... } = имя_обьекта

можно использовать как const так и let.
*/

const userDate = {
    name: 'Alex',
    age: 34,
    sex: 'men',
    height: 160
}

// создание одной переменной
let {name} = userDate;
console.log(name);
console.log();
//создание нескольких переменных
let {age, sex,height} = userDate;
console.log(age, sex,height);
console.log();
console.log(sex);

/*
что происходит в примере:
обьявление новых переменных на основе свойств обьекта.
и присваивание им того же значения что и свойства обьекта.

С правой стороны 
userDate имя пееременной в которой находится обьект

С левой стороны
age, sex,height названия новых переменных,
совпадают с именами свойств обьекта,
на их основе создадутся новые переменные с те ми же именами и значениями.

{} благодаря фигурным скобкам мы говорим что хотим выполнить такую операцию,
получить значение свойств обьекта, создать переменные и присвоить им то же значения 
,что и у свойств обьектаю

= оператор присваивания.
*/

//==============================================================================

//! Деструктуризация массива.

